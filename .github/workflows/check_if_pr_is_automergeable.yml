name: Check if PR is automergeable


# Triggered on all PRs either by
# - completion of CI checks (status events), OR
# - tagging with "automerge" or "automerge-web" labels
#
# This workflow checks if the PR that invoked the trigger is automergeable. 
# A PR is automergeable iff it:
# 1) is labeled "automerge" OR "automerge-web" (originates from web submission) (checked in actions_helpers.py)
# 2) only changes plugins (subdirs of /benchmarks, /data, /models, /metrics)
# 3) passes all tests (Travis and Jenkins). 
# If all 3 conditions are met, the "automerge-approved" label is applied to the PR
# (This label triggers the `automerge_plugin-only_prs` workflow to merge the PR.)
#
# If any test fails, the user will be notified by the brain-score email account.


on:
  pull_request:
    types: [labeled, synchronized]
  status:

permissions: write-all

jobs:
  check-trigger:
    runs-on: ubuntu-latest
    outputs:
      PROCEED: ${{ steps.check-label.outputs.PROCEED }}
    steps:
      - name: Check trigger condition
        id: check-label
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "labeled" ]]; then
            LABEL_NAME="${{ github.event.label.name }}"
            echo "Trigger label: $LABEL_NAME"
            if [[ "$LABEL_NAME" == "failure-notified" ]]; then
             echo "PROCEED='false'" >> $GITHUB_OUTPUT
            else
              echo "PROCEED='true'" >> $GITHUB_OUTPUT
            fi
          else
            echo "PROCEED='true'" >> $GITHUB_OUTPUT
          fi
          
  remove_failure_notified_label:
    if: github.event_name == 'pull_request' && github.event.action == 'synchronized'
    runs-on: ubuntu-latest
    steps:
      - name: Remove 'failure-notified' label on new push to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            if (labels.find(label => label.name === 'failure-notified')) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                name: 'failure-notified'
              });
            }

  check_pr_details:
    name: Check all details of the PR (if all tests have passed, PR meets automerge conditions, pr number, if label is 'automerge-web')
    runs-on: ubuntu-latest
    needs: check-trigger
    if: needs.check-trigger.outputs.PROCEED == 'true'
    outputs:
      ALL_TESTS_PASS: ${{ steps.get_test_results.outputs.TEST_RESULTS }}
      PR_NUMBER: ${{ steps.get_pr_number.outputs.PR_NUMBER }}
      AUTOMERGE_WEB: ${{ steps.check_automerge_web_label.outputs.AUTOMERGE_WEB }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get PR number from workflow context
        id: get_pr_number
        run: |
          echo "PR_NUMBER=$( python brainscore_vision/submission/actions_helpers.py get_pr_num )" >> $GITHUB_OUTPUT
      - name: Check if PR has 'automerge-web' label
        id: check_automerge_web_label
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LABELS_JSON=$(gh pr view ${{ steps.get_pr_number.outputs.PR_NUMBER }} --json labels)
          echo "Labels: $LABELS_JSON"
          if echo "$LABELS_JSON" | jq -e '.labels[] | select(.name == "automerge-web")' >/dev/null; then
            echo "Found automerge-web label."
            echo "AUTOMERGE_WEB='true'" >> $GITHUB_OUTPUT
          else
            echo "automerge-web label not found."
            echo "AUTOMERGE_WEB='false'" >> $GITHUB_OUTPUT
          fi
      - name: Get test results and ensure automergeable
        id: get_test_results
        run: |
          echo "Checking test results for PR head $( python brainscore_vision/submission/actions_helpers.py get_pr_head )"          
          test_results=$( python brainscore_vision/submission/actions_helpers.py )
          echo $test_results
          echo "TEST_RESULTS=$test_results" >> $GITHUB_OUTPUT

  approve_automerge:
    name: If tests pass and PR is automergeable, apply "approve_automerge" label to PR
    runs-on: ubuntu-latest
    permissions:
      issues: write
    needs: check_pr_details
    if: needs.check_pr_details.outputs.ALL_TESTS_PASS == 'True' && needs.check-trigger.outputs.PROCEED == 'true'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Add automerge-approved label to PR
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ needs.check_pr_details.outputs.PR_NUMBER }}
          LABELS: automerge-approved
        run: gh issue edit "$NUMBER" --add-label "$LABELS"

  check_email_label:
    name: Ensure user is not notified multiple times for multiple failures on one PR
    runs-on: ubuntu-latest
    needs: check_pr_details
    outputs:
      FAILURE_NOTIFIED: ${{ steps.check_failure_notified_label.outputs.FAILURE_NOTIFIED }}
    if: needs.check_pr_details.outputs.ALL_TESTS_PASS == 'False' && needs.check_pr_details.outputs.AUTOMERGE_WEB == 'true' && needs.check-trigger.outputs.PROCEED == 'true'
    steps:
      - name: Check if PR has 'failure-notified' label already
        id: check_failure_notified_label
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LABELS_JSON=$(gh pr view ${{ steps.get_pr_number.outputs.PR_NUMBER }} --json labels)
          echo "Labels: $LABELS_JSON"
          if echo "$LABELS_JSON" | jq -e '.labels[] | select(.name == "failure-notified")' >/dev/null; then
            echo "Found failure-notified label."
            echo "FAILURE_NOTIFIED='true'" >> $GITHUB_OUTPUT
          else
            echo "failure-notified label not found."
            echo "FAILURE_NOTIFIED='false'" >> $GITHUB_OUTPUT
          fi
  
  notify_failure:
    name: If any test fails, notify the user through the brain-score email account (only needed for web submissions)
    uses: ./.github/workflows/user_notification_system.yml
    needs: [check_pr_details, check_email_label]
    if: needs.check_pr_details.outputs.ALL_TESTS_PASS == 'False' && needs.check_pr_details.outputs.AUTOMERGE_WEB == 'true' && needs.check_email_label.outputs.FAILURE_NOTIFIED == 'false' && needs.check-trigger.outputs.PROCEED == 'true'
    with:
      pr_number: ${{ needs.check_pr_details.outputs.PR_NUMBER }}
      is_automerge_web: true
      action_type: 'send_email'
    secrets: inherit
